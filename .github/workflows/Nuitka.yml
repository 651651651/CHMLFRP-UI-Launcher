name: Build Nuitka Standalone Executable

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka
          pip install upx
          pip install -r requirements.txt

      # Install UPX using Chocolatey on Windows
      - name: Install UPX
        run: |
          choco install upx -y  # 安装 UPX，-y 表示自动确认安装

      # Get UPX binary path and set it as environment variable
      - name: Get UPX binary path
        run: |
          $UPXPath = (Get-Command upx).Source
          echo "UPX_PATH=$UPXPath" >> $GITHUB_ENV  # 将 UPX 路径存入 GitHub 环境变量

      - name: Build executable with Nuitka
        run: |
          python -m nuitka --standalone --onefile --python-flag=-O `
          --include-package=PyQt6 `
          --plugin-enable=python `
          --no-pyi `
          --upx-binary=$UPX_PATH `
          --include-package-data=PyQt6 `
          --include-qt-plugins=styles,platforms,qml `
          --plugin-enable=pyqt6,upx `
          --follow-import-to=PyQt6,PyQt6.QtCore,PyQt6.QtGui,PyQt6.QtWidgets `
          --nofollow-imports `
          --remove-output `
          --windows-console-mode=disable `
          --include-package=mcstatus `
          --include-package=requests `
          --include-package=psutil `
          --include-package=pyperclip `
          --include-package=ipaddress `
          --assume-yes-for-downloads `
          --output-dir=./build_output `
          --nofollow-import-to=psutil.tests.test_testutils `
          --nofollow-import-to=psutil.tests `
          --windows-icon-from-ico=./favicon.ico `
          ./CHMLFRP_UI.py

      - name: Check if executable exists
        run: |
          $exePath = "./build_output/CHMLFRP_UI.exe"
          if (Test-Path $exePath) {
            Write-Host "Executable exists, proceeding with rename."
          } else {
            Write-Error "Executable not found at $exePath"
            exit 1
          }

      - name: Rename executable with date
        run: |
          $currentDate = (Get-Date -Format "yyyyMMdd")
          $originalPath = "./build_output/CHMLFRP_UI.exe"
          if (Test-Path $originalPath) {
            $newFileName = "CHMLFRP_UI_$currentDate.exe"
            $newPath = Join-Path -Path (Split-Path $originalPath) -ChildPath $newFileName
            Move-Item -Path $originalPath -Destination $newPath
            Write-Output "Renamed file to $newPath"
          } else {
            Write-Error "Executable not found at $originalPath"
            exit 1
          }
      - name: Copy additional files
        run: |
          Copy-Item -Path favicon.ico -Destination ./build_output/
          Copy-Item -Path frpc.exe -Destination ./build_output/
          Copy-Item -Path frpc_full.ini -Destination ./build_output/
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CHMLFRP_UI-executable
          path: ./build_output/CHMLFRP_UI_*.exe
          retention-days: 7
