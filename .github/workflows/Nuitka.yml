name: Build Nuitka Standalone Executable

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka PyQt6 mcstatus requests psutil pyperclip ipaddress

      - name: Build executable with Nuitka
        run: |
          nuitka --standalone --onefile --python-flag=-O `
          --include-package=PyQt6 `
          --include-package=mcstatus `
          --include-package=requests `
          --include-package=psutil `
          --include-package=pyperclip `
          --include-package=ipaddress `
          --include-package=re `
          --windows-console-mode=disable `
          --assume-yes-for-downloads `
          --windows-icon-from-ico=./favicon.ico ./CHMLFRP_UI.py

      - name: Check if build directory exists
        run: |
          if (Test-Path /CHNLFRP_UI.dist/CHNLFRP_UI.exe) {
            Write-Output "构建文件存在."
          } else {
            Write-Output "构建文件不存在."
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: CHNLFRP_UI-executable
          path: ./CHNLFRP_UI.dist/CHNLFRP_UI.exe

      - name: Upload to cloud storage
        if: success()  # 仅在构建成功时执行
        run: |
          $username = "boring_student"  # 直接使用用户名
          $password = "12345678"  # 直接使用密码

          # 第一步：登录获取token
          $url = "http://chmlfrp_ui.frp.wtf/api/auth/login"  # 云盘地址
          $payload = @{
              username = $username
              password = $password
          } | ConvertTo-Json  # 将 PowerShell 哈希表转换为 JSON 格式
          $headers = @{ 'Content-Type' = 'application/json' }
    
          try {
              $response = Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $payload -TimeoutSec 60
              $token = $response.token
          } catch {
              Write-Error "请求失败：$($_.Exception.Message)"
              exit 1  # 如果请求失败，终止脚本
          }

          # 第二步：使用token上传文件
          $upload_url = "http://chmlfrp_ui.frp.wtf/api/fs/form"  # 云盘地址
          $file_path = "./CHNLFRP_UI.dist/CHNLFRP_UI.exe"  # 调整路径，如果需要的话
          $headers = @{
              Authorization = $token
              'Content-Length' = (Get-Content $file_path -Raw).Length
              'CHMLFRP_UI' = 'desired/remote/path/CHNLFRP_UI.exe'  # 文件保存路径
              'As-Task' = 'true'
              'Content-Type' = 'multipart/form-data'
          }
    
          # 上传文件
          $file = Get-Item -LiteralPath $file_path
          try {
              $response = Invoke-RestMethod -Uri $upload_url -Method Put -Headers $headers -InFile $file
              Write-Output $response
          } catch {
              Write-Error "上传文件失败：$($_.Exception.Message)"
              exit 1  # 如果上传失败，终止脚本
          }
