name: Build Optimized ChmlFrp UI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: 
      - created
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Nuitka
      run: |
        pip install nuitka ordered-set zstandard

    - name: Install UPX
      run: |
        choco install upx
        upx --version

    - name: Build with Nuitka (optimized)
      run: |
        python -m nuitka --onefile `
          --windows-force-stdout-spec=./static/log/build.out.txt `
          --windows-force-stderr-spec=./static/log/build.err.txt `
          --windows-icon-from-ico=favicon1.ico `
          --windows-disable-console `
          --include-package-data=PyQt6 `
          --include-qt-plugins=styles,platforms,qml `
          --plugin-enable=pyqt6 `
          --output-dir=dist `
          --remove-output `
          --assume-yes-for-downloads `
          --nofollow-imports `
          --follow-import-to=PyQt6,PyQt6.QtCore,PyQt6.QtGui,PyQt6.QtWidgets `
          --enable-plugin=upx `
          --upx-binary=upx.exe `
          --jobs=4 `
          --lto=yes `
          --output-filename=ChmlFrp_UI.exe `
          CHMLFRP_UI.py

    - name: Compress with UPX
      continue-on-error: true
      run: |
        upx --best --lzma dist/ChmlFrp_UI.exe

    - name: Create distribution package
      run: |
        mkdir dist_package
        copy dist\ChmlFrp_UI.exe dist_package\
        copy favicon.ico dist_package\
        copy README.md dist_package\
        copy LICENSE dist_package\
        echo Author: boring_student > dist_package\AUTHOR.txt
        echo Version: 2.1.0 >> dist_package\AUTHOR.txt

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path dist_package\* -DestinationPath ChmlFrp_UI.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ChmlFrp_UI
        path: ChmlFrp_UI.zip

    - name: Upload release asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./ChmlFrp_UI.zip
        asset_name: ChmlFrp_UI.zip
        asset_content_type: application/zip
